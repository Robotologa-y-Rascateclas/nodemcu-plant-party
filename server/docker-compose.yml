version: '3.9'

services:
  mongodb:
    build:
      context: .
      dockerfile: Dockerfile.mongodb
    container_name: mongodb
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - my-network
    restart: unless-stopped
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile.nodejs
    container_name: nodejs
    volumes:
      - ./src:/app/src
    ports:
      - "3000:3000"
    networks:
      - my-network
    depends_on:
      - mongodb
    restart: unless-stopped
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    volumes:
      - influxdb-data:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
    networks:
      - my-network
    restart: unless-stopped
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
  chronograf:
    image: chronograf:latest
    container_name: chronograf
    depends_on:
      - influxdb
    environment:
      - 'TZ=${TIMEZONE}'
      - INFLUXDB_DB=${INFLUXDB_DATABASE}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
    volumes:
      - chronograf-data:/var/lib/chronograf:rw
    ports:
      - "8888:8888"
    networks:
      - my-network
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    networks:
      - my-network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - 'TZ=${TIMEZONE}'
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}

volumes:
  mongodb-data:
  influxdb-data:
  chronograf-data:
  grafana-data:

networks:
  my-network:
    driver: bridge
